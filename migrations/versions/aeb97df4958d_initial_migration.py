"""Initial migration

Revision ID: aeb97df4958d
Revises: 
Create Date: 2025-03-24 21:36:24.265919

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'aeb97df4958d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('AudienceType',
    sa.Column('AudienceTypeID', sa.Integer(), nullable=False),
    sa.Column('AudienceName', sa.String(length=50), nullable=False),
    sa.Column('MinAge', sa.Integer(), nullable=True),
    sa.Column('MaxAge', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('AudienceTypeID')
    )
    op.create_table('Event',
    sa.Column('EventID', sa.Integer(), nullable=False),
    sa.Column('EventName', sa.String(length=100), nullable=False),
    sa.Column('Type', sa.String(length=50), nullable=True),
    sa.Column('EventDate', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('EventID')
    )
    op.create_table('EventLocation',
    sa.Column('LocationID', sa.Integer(), nullable=False),
    sa.Column('RoomName', sa.String(length=50), nullable=False),
    sa.Column('Capacity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('LocationID')
    )
    op.create_table('Item',
    sa.Column('ItemID', sa.Integer(), nullable=False),
    sa.Column('Title', sa.String(length=100), nullable=False),
    sa.Column('Status', sa.String(length=20), nullable=False),
    sa.Column('PublicationYear', sa.Integer(), nullable=True),
    sa.Column('Author', sa.String(length=100), nullable=True),
    sa.Column('Type', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('ItemID')
    )
    op.create_table('People',
    sa.Column('PeopleID', sa.Integer(), nullable=False),
    sa.Column('FirstName', sa.String(length=50), nullable=False),
    sa.Column('LastName', sa.String(length=50), nullable=False),
    sa.Column('Phone', sa.String(length=20), nullable=False),
    sa.Column('Email', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('PeopleID')
    )
    op.create_table('ProposedItem',
    sa.Column('ProposalID', sa.Integer(), nullable=False),
    sa.Column('ProposalDate', sa.Date(), nullable=False),
    sa.Column('IntendedType', sa.String(length=20), nullable=False),
    sa.Column('Title', sa.String(length=100), nullable=True),
    sa.Column('Author', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('ProposalID')
    )
    op.create_table('DigitalItem',
    sa.Column('ItemID', sa.Integer(), nullable=False),
    sa.Column('URL', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['ItemID'], ['Item.ItemID'], ),
    sa.PrimaryKeyConstraint('ItemID')
    )
    op.create_table('Employee',
    sa.Column('EmployeeID', sa.Integer(), nullable=False),
    sa.Column('PeopleID', sa.Integer(), nullable=True),
    sa.Column('Position', sa.String(length=100), nullable=False),
    sa.Column('WagePerHour', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['PeopleID'], ['People.PeopleID'], ),
    sa.PrimaryKeyConstraint('EmployeeID'),
    sa.UniqueConstraint('PeopleID')
    )
    op.create_table('IsHeldAt',
    sa.Column('EventID', sa.Integer(), nullable=False),
    sa.Column('LocationID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['EventID'], ['Event.EventID'], ),
    sa.ForeignKeyConstraint(['LocationID'], ['EventLocation.LocationID'], ),
    sa.PrimaryKeyConstraint('EventID', 'LocationID')
    )
    op.create_table('Member',
    sa.Column('MemberID', sa.Integer(), nullable=False),
    sa.Column('PeopleID', sa.Integer(), nullable=True),
    sa.Column('JoinDate', sa.Date(), nullable=False),
    sa.Column('MembershipStatus', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['PeopleID'], ['People.PeopleID'], ),
    sa.PrimaryKeyConstraint('MemberID'),
    sa.UniqueConstraint('PeopleID')
    )
    op.create_table('PhysicalItem',
    sa.Column('ItemID', sa.Integer(), nullable=False),
    sa.Column('ShelfNumber', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['ItemID'], ['Item.ItemID'], ),
    sa.PrimaryKeyConstraint('ItemID')
    )
    op.create_table('Recommended',
    sa.Column('EventID', sa.Integer(), nullable=False),
    sa.Column('AudienceTypeID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['AudienceTypeID'], ['AudienceType.AudienceTypeID'], ),
    sa.ForeignKeyConstraint(['EventID'], ['Event.EventID'], ),
    sa.PrimaryKeyConstraint('EventID', 'AudienceTypeID')
    )
    op.create_table('Request',
    sa.Column('RequestID', sa.Integer(), nullable=False),
    sa.Column('PeopleID', sa.Integer(), nullable=False),
    sa.Column('Question', sa.Text(), nullable=False),
    sa.Column('Answer', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['PeopleID'], ['People.PeopleID'], ),
    sa.PrimaryKeyConstraint('RequestID')
    )
    op.create_table('SignUp',
    sa.Column('RegistrationID', sa.Integer(), nullable=False),
    sa.Column('EventID', sa.Integer(), nullable=False),
    sa.Column('PeopleID', sa.Integer(), nullable=False),
    sa.Column('Attended', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['EventID'], ['Event.EventID'], ),
    sa.ForeignKeyConstraint(['PeopleID'], ['People.PeopleID'], ),
    sa.PrimaryKeyConstraint('RegistrationID')
    )
    op.create_table('BorrowingTransaction',
    sa.Column('TransactionID', sa.Integer(), nullable=False),
    sa.Column('MemberID', sa.Integer(), nullable=False),
    sa.Column('ItemID', sa.Integer(), nullable=False),
    sa.Column('CheckoutDate', sa.DateTime(), nullable=False),
    sa.Column('DueDate', sa.DateTime(), nullable=False),
    sa.Column('ReturnDate', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ItemID'], ['Item.ItemID'], ),
    sa.ForeignKeyConstraint(['MemberID'], ['Member.MemberID'], ),
    sa.PrimaryKeyConstraint('TransactionID')
    )
    op.create_table('Organizes',
    sa.Column('EmployeeID', sa.Integer(), nullable=False),
    sa.Column('EventID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['EmployeeID'], ['Employee.EmployeeID'], ),
    sa.ForeignKeyConstraint(['EventID'], ['Event.EventID'], ),
    sa.PrimaryKeyConstraint('EmployeeID', 'EventID')
    )
    op.create_table('Fine',
    sa.Column('FineID', sa.Integer(), nullable=False),
    sa.Column('TransactionID', sa.Integer(), nullable=False),
    sa.Column('Amount', sa.Float(), nullable=False),
    sa.Column('DateReturned', sa.Date(), nullable=True),
    sa.Column('PaidDate', sa.Date(), nullable=True),
    sa.Column('PaidStatus', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['TransactionID'], ['BorrowingTransaction.TransactionID'], ),
    sa.PrimaryKeyConstraint('FineID')
    )
    op.create_table('IsDue',
    sa.Column('FineID', sa.Integer(), nullable=False),
    sa.Column('TransactionID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['FineID'], ['Fine.FineID'], ),
    sa.ForeignKeyConstraint(['TransactionID'], ['BorrowingTransaction.TransactionID'], ),
    sa.PrimaryKeyConstraint('FineID', 'TransactionID')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('IsDue')
    op.drop_table('Fine')
    op.drop_table('Organizes')
    op.drop_table('BorrowingTransaction')
    op.drop_table('SignUp')
    op.drop_table('Request')
    op.drop_table('Recommended')
    op.drop_table('PhysicalItem')
    op.drop_table('Member')
    op.drop_table('IsHeldAt')
    op.drop_table('Employee')
    op.drop_table('DigitalItem')
    op.drop_table('ProposedItem')
    op.drop_table('People')
    op.drop_table('Item')
    op.drop_table('EventLocation')
    op.drop_table('Event')
    op.drop_table('AudienceType')
    # ### end Alembic commands ###
